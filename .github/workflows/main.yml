name: CI

on:
  pull_request:
    branches:
      - "*"
  push:
    branches:
      - main
      - v1

jobs:
  scan:
    timeout-minutes: 10
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

  lint:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Lint code for consistent style
        run: bundle exec standardrb

  test:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: ".node-version"
          cache: 'pnpm'

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y -qq libvips
          pnpm install

      - name: Run tests
        env:
          RAILS_ENV: test
          # RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
        run: |
          bin/rails test:prepare
          bin/rails db:test:prepare
          bin/rails test

  heroku-deploy:
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/PhlexUI-web' }}
    needs: [lint, test]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Deploy to Heroku
        uses: akhileshns/heroku-deploy@v3.12.14
        with:
          branch: PhlexUI-web
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "phlex-ui-web"
          heroku_email: "seth@statecert.com"

  fly-deploy:
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    needs: [lint, test]
    name: Deploy app
    runs-on: ubuntu-latest
    concurrency: deploy-group
    steps:
      - uses: actions/checkout@v4
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - run: flyctl deploy --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
